# Generated by Django 5.2.6 on 2025-10-24 16:12

import django.db.models.deletion
import wagtail.contrib.routable_page.models
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0095_groupsitepermission"),
        ("wagtaildocs", "0014_alter_document_file_size"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="ToursIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro",
                    models.TextField(
                        blank=True, help_text="Introduction for the tours index page"
                    ),
                ),
                (
                    "body_content",
                    wagtail.fields.StreamField(
                        [("text_band", 4), ("flex_images", 9)],
                        blank=True,
                        block_lookup={
                            0: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"max_length": 36, "required": True},
                            ),
                            1: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "features": ["bold", "italic", "link"],
                                    "required": True,
                                },
                            ),
                            2: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": False},
                            ),
                            3: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("--cyan-dark-10", "Cyan"),
                                        ("--yellow-dark-20", "Yellow"),
                                        ("--red-dark-10", "Red"),
                                        ("--green2-dark-20", "Green"),
                                        ("--yellow-dark-100", "Black"),
                                    ]
                                },
                            ),
                            4: (
                                "wagtail.blocks.StructBlock",
                                [
                                    [
                                        ("band_title", 0),
                                        ("textbox_1", 1),
                                        ("textbox_2", 1),
                                        ("background_image", 2),
                                        ("background_color", 3),
                                    ]
                                ],
                                {},
                            ),
                            5: (
                                "wagtail.images.blocks.ImageChooserBlock",
                                (),
                                {"required": True},
                            ),
                            6: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {
                                    "help_text": "Image caption",
                                    "max_length": 300,
                                    "required": True,
                                },
                            ),
                            7: (
                                "wagtail.blocks.StructBlock",
                                [[("image", 5), ("caption", 6)]],
                                {},
                            ),
                            8: ("wagtail.blocks.ListBlock", (7,), {}),
                            9: (
                                "wagtail.blocks.StructBlock",
                                [[("image_caption", 8)]],
                                {},
                            ),
                        },
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tours List Page",
                "verbose_name_plural": "Tours Indices",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="LandTourPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 'Cuenca Cultural Getaway'", max_length=200
                    ),
                ),
                (
                    "destination",
                    models.CharField(
                        choices=[
                            ("Dominican Republic", "Dominican Republic"),
                            ("Colombia", "Colombia"),
                            ("Ecuador", "Ecuador"),
                            ("Iceland", "Iceland"),
                            ("Poland", "Poland"),
                        ],
                        default="Ecuador",
                        help_text="Select the destination country.",
                        max_length=100,
                    ),
                ),
                ("description", models.TextField(help_text="Description of the tour.")),
                (
                    "location",
                    models.CharField(
                        help_text="Location inside the country", max_length=30
                    ),
                ),
                (
                    "cover_page_content",
                    models.TextField(
                        blank=True, help_text="Content for the tour's cover page."
                    ),
                ),
                (
                    "general_info",
                    models.TextField(
                        blank=True,
                        help_text="General info like cancellation policy, inclusions.",
                    ),
                ),
                (
                    "final_message",
                    models.TextField(
                        blank=True, help_text="Final message from the travel company."
                    ),
                ),
                (
                    "courtesies",
                    models.TextField(
                        blank=True,
                        default="Tour guiado por la ciudad",
                        help_text="Tour inclusions",
                    ),
                ),
                (
                    "amenity",
                    wagtail.fields.StreamField(
                        [("include", 1)],
                        blank=True,
                        block_lookup={
                            0: (
                                "wagtail.blocks.ChoiceBlock",
                                [],
                                {
                                    "choices": [
                                        ("fa-concierge-bell", "24-Hour Front Desk"),
                                        ("fa-wheelchair", "Accessibility Features"),
                                        ("fa-snowflake", "Air Conditioning"),
                                        ("fa-shuttle-van", "Airport Shuttle"),
                                        ("fa-glass-martini", "Bar"),
                                        ("fa-bath", "Bathtub"),
                                        ("fa-water", "Beach Access"),
                                        ("fa-umbrella-beach", "Beach Umbrellas"),
                                        ("fa-bicycle", "Bicycle Rental"),
                                        ("fa-coffee", "Breakfast Included"),
                                        ("fa-laptop", "Business Center"),
                                        ("fa-car", "Car Rental"),
                                        ("fa-bed", "Comfortable Beds"),
                                        ("fa-concierge-bell", "Concierge Service"),
                                        ("fa-briefcase", "Conference Rooms"),
                                        ("fa-leaf", "Eco-Friendly"),
                                        ("fa-plug", "Electric Vehicle Charging"),
                                        ("fa-theater-masks", "Entertainment Shows"),
                                        ("fa-child", "Family Friendly"),
                                        ("fa-fish", "Fishing"),
                                        ("fa-dumbbell", "Fitness Center"),
                                        ("fa-wifi", "Free WiFi"),
                                        ("fa-tree", "Garden"),
                                        ("fa-shopping-bag", "Gift Shop"),
                                        ("fa-golf-ball", "Golf Course"),
                                        ("fa-map", "Guided Tours"),
                                        ("fa-hiking", "Hiking Trails"),
                                        ("fa-horse", "Horseback Riding"),
                                        ("fa-hot-tub", "Hot Tub"),
                                        ("fa-tv", "In-Room TV"),
                                        ("fa-tshirt", "Laundry Service"),
                                        ("fa-spa", "Massage Services"),
                                        ("fa-smoking-ban", "Non-Smoking Rooms"),
                                        ("fa-sun", "Outdoor Terrace"),
                                        ("fa-parking", "Parking"),
                                        ("fa-paw", "Pet Friendly"),
                                        ("fa-camera", "Photography Tours"),
                                        ("fa-umbrella", "Poolside Bar"),
                                        ("fa-shower", "Private Bathroom"),
                                        ("fa-bus", "Public Transport Access"),
                                        ("fa-utensils", "Restaurant"),
                                        ("fa-bell", "Room Service"),
                                        ("fa-lock", "Safe Deposit Box"),
                                        ("fa-binoculars", "Sightseeing Tours"),
                                        ("fa-smoking", "Smoking Area"),
                                        ("fa-spa", "Spa"),
                                        ("fa-sun", "Sun Deck"),
                                        ("fa-swimming-pool", "Swimming Pool"),
                                        ("fa-taxi", "Taxi Service"),
                                        ("fa-wine-glass", "Wine Tasting"),
                                    ]
                                },
                            ),
                            1: ("wagtail.blocks.ListBlock", (0,), {}),
                        },
                        help_text="Add as many amenities.",
                    ),
                ),
                (
                    "no_inclusions",
                    models.TextField(
                        blank=True, default="Ticket aéreo", help_text="Not included"
                    ),
                ),
                (
                    "additional_notes",
                    models.TextField(
                        blank=True,
                        default="Sujeto a disponibilidad. Consultar suplementos para festivos.",
                    ),
                ),
                ("hotel", models.CharField(default="LOCAL", max_length=50)),
                ("is_on_discount", models.BooleanField(default=False)),
                ("is_special_offer", models.BooleanField(default=False)),
                ("is_sold_out", models.BooleanField(default=False)),
                ("is_all_inclusive", models.BooleanField(default=False)),
                (
                    "price_subtext",
                    models.CharField(
                        default="Estimated",
                        help_text="Estimated. IVA not included",
                        max_length=30,
                    ),
                ),
                ("ref_code", models.CharField(blank=True, max_length=20, null=True)),
                ("code_id", models.CharField(editable=False, max_length=15)),
                (
                    "pdf_images",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of URLs for PDF page images",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "available_days",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Comma-separated days (0=Sunday, ..., 6=Saturday), e.g., '0,1,2,3'",
                        max_length=50,
                    ),
                ),
                (
                    "supplier_email",
                    models.EmailField(
                        blank=True, help_text="Supplier contact email", max_length=254
                    ),
                ),
                (
                    "pricing_type",
                    models.CharField(
                        choices=[
                            ("Per_room", "Per Room"),
                            ("Per_person", "Per Person"),
                        ],
                        default="Per_person",
                        max_length=20,
                    ),
                ),
                ("max_children_per_room", models.PositiveIntegerField(default=1)),
                ("child_age_min", models.PositiveIntegerField(default=7)),
                ("child_age_max", models.PositiveIntegerField(default=12)),
                ("price_sgl", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price_dbl", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price_tpl", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price_chd", models.DecimalField(decimal_places=2, max_digits=10)),
                ("price_inf", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "seasonal_factor",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=3),
                ),
                (
                    "demand_factor",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                (
                    "rep_comm",
                    models.PositiveIntegerField(
                        default=0, help_text="Sales representative commission"
                    ),
                ),
                (
                    "yt_vid",
                    models.URLField(
                        default="www.none.com",
                        help_text="This video will be shown in the Tours Watch Video.",
                    ),
                ),
                ("max_capacity", models.PositiveIntegerField(default=20)),
                ("available_slots", models.PositiveIntegerField(default=20)),
                (
                    "itinerary",
                    wagtail.fields.StreamField(
                        [("day_entry", 3)],
                        blank=True,
                        block_lookup={
                            0: ("wagtail.blocks.IntegerBlock", (), {"required": True}),
                            1: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {"help_text": "Day description", "required": True},
                            ),
                            2: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {
                                    "features": ["bold", "italic"],
                                    "max_chars": 300,
                                    "required": True,
                                },
                            ),
                            3: (
                                "wagtail.blocks.StructBlock",
                                [[("day", 0), ("description", 1), ("highlight", 2)]],
                                {},
                            ),
                        },
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("duration_days", models.PositiveIntegerField(default=3)),
                ("nights", models.PositiveIntegerField(default=2)),
                (
                    "cover_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for the tour's cover page.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_cover",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_image",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "logo_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Company logo for the final page.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_logo",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "pdf_file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_pdf",
                        to="wagtaildocs.document",
                    ),
                ),
            ],
            options={
                "verbose_name": "Land Tour",
                "verbose_name_plural": "Land Tours",
            },
            bases=("wagtailcore.page",),
        ),
    ]
